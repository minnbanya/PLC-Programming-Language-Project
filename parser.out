Grammar:

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statement
Rule 3     statements -> statement ;
Rule 4     statements -> statement ; statements
Rule 5     statement -> NAME = expr
Rule 6     statement -> WHILE ( expr ) { statements }
Rule 7     statement -> IF ( expr ) { statements }
Rule 8     statement -> IF ( expr ) { statements } ELSE { statements }
Rule 9     statement -> PRINT ( expr )
Rule 10    expr -> BOOLEAN
Rule 11    expr -> NAME
Rule 12    expr -> expr
Rule 13    expr -> NUMBER
Rule 14    expr -> expr NOTEQUALS expr  [precedence=left, level=1]
Rule 15    expr -> expr EQUALS expr  [precedence=left, level=1]
Rule 16    expr -> expr GREATER expr
Rule 17    expr -> expr LESS expr
Rule 18    expr -> expr / expr  [precedence=left, level=3]
Rule 19    expr -> expr * expr  [precedence=left, level=3]
Rule 20    expr -> expr - expr  [precedence=left, level=2]
Rule 21    expr -> expr + expr  [precedence=left, level=2]

Terminals, with rules where they appear:

(                    : 6 7 8 9
)                    : 6 7 8 9
*                    : 19
+                    : 21
-                    : 20
/                    : 18
;                    : 3 4
=                    : 5
BOOLEAN              : 10
ELSE                 : 8
EQUALS               : 15
GREATER              : 16
IF                   : 7 8
LESS                 : 17
NAME                 : 5 11
NOTEQUALS            : 14
NUMBER               : 13
PRINT                : 9
WHILE                : 6
error                : 
{                    : 6 7 8 8
}                    : 6 7 8 8

Nonterminals, with rules where they appear:

expr                 : 5 6 7 8 9 12 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21
program              : 0
statement            : 2 3 4
statements           : 1 4 6 7 8 8


state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statement
    (3) statements -> . statement ;
    (4) statements -> . statement ; statements
    (5) statement -> . NAME = expr
    (6) statement -> . WHILE ( expr ) { statements }
    (7) statement -> . IF ( expr ) { statements }
    (8) statement -> . IF ( expr ) { statements } ELSE { statements }
    (9) statement -> . PRINT ( expr )
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    PRINT           shift and go to state 7

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> statements .
    $end            reduce using rule 1 (program -> statements .)


state 3

    (2) statements -> statement .
    (3) statements -> statement . ;
    (4) statements -> statement . ; statements
    $end            reduce using rule 2 (statements -> statement .)
    }               reduce using rule 2 (statements -> statement .)
    ;               shift and go to state 8


state 4

    (5) statement -> NAME . = expr
    =               shift and go to state 9


state 5

    (6) statement -> WHILE . ( expr ) { statements }
    (               shift and go to state 10


state 6

    (7) statement -> IF . ( expr ) { statements }
    (8) statement -> IF . ( expr ) { statements } ELSE { statements }
    (               shift and go to state 11


state 7

    (9) statement -> PRINT . ( expr )
    (               shift and go to state 12


state 8

    (3) statements -> statement ; .
    (4) statements -> statement ; . statements
    (2) statements -> . statement
    (3) statements -> . statement ;
    (4) statements -> . statement ; statements
    (5) statement -> . NAME = expr
    (6) statement -> . WHILE ( expr ) { statements }
    (7) statement -> . IF ( expr ) { statements }
    (8) statement -> . IF ( expr ) { statements } ELSE { statements }
    (9) statement -> . PRINT ( expr )
    $end            reduce using rule 3 (statements -> statement ; .)
    }               reduce using rule 3 (statements -> statement ; .)
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 3
    statements                     shift and go to state 13

state 9

    (5) statement -> NAME = . expr
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 15

state 10

    (6) statement -> WHILE ( . expr ) { statements }
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 18

state 11

    (7) statement -> IF ( . expr ) { statements }
    (8) statement -> IF ( . expr ) { statements } ELSE { statements }
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 19

state 12

    (9) statement -> PRINT ( . expr )
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 20

state 13

    (4) statements -> statement ; statements .
    $end            reduce using rule 4 (statements -> statement ; statements .)
    }               reduce using rule 4 (statements -> statement ; statements .)


state 14

    (11) expr -> NAME .
    NOTEQUALS       reduce using rule 11 (expr -> NAME .)
    EQUALS          reduce using rule 11 (expr -> NAME .)
    GREATER         reduce using rule 11 (expr -> NAME .)
    LESS            reduce using rule 11 (expr -> NAME .)
    /               reduce using rule 11 (expr -> NAME .)
    *               reduce using rule 11 (expr -> NAME .)
    -               reduce using rule 11 (expr -> NAME .)
    +               reduce using rule 11 (expr -> NAME .)
    ;               reduce using rule 11 (expr -> NAME .)
    $end            reduce using rule 11 (expr -> NAME .)
    }               reduce using rule 11 (expr -> NAME .)
    )               reduce using rule 11 (expr -> NAME .)


state 15

    (5) statement -> NAME = expr .
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! reduce/reduce conflict for ; resolved using rule 5 (statement -> NAME = expr .)
  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> NAME = expr .)
  ! reduce/reduce conflict for } resolved using rule 5 (statement -> NAME = expr .)
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 5 (statement -> NAME = expr .)
    $end            reduce using rule 5 (statement -> NAME = expr .)
    }               reduce using rule 5 (statement -> NAME = expr .)
    NOTEQUALS       shift and go to state 21
    EQUALS          shift and go to state 22
    GREATER         shift and go to state 23
    LESS            shift and go to state 24
    /               shift and go to state 25
    *               shift and go to state 26
    -               shift and go to state 27
    +               shift and go to state 28


state 16

    (10) expr -> BOOLEAN .
    NOTEQUALS       reduce using rule 10 (expr -> BOOLEAN .)
    EQUALS          reduce using rule 10 (expr -> BOOLEAN .)
    GREATER         reduce using rule 10 (expr -> BOOLEAN .)
    LESS            reduce using rule 10 (expr -> BOOLEAN .)
    /               reduce using rule 10 (expr -> BOOLEAN .)
    *               reduce using rule 10 (expr -> BOOLEAN .)
    -               reduce using rule 10 (expr -> BOOLEAN .)
    +               reduce using rule 10 (expr -> BOOLEAN .)
    ;               reduce using rule 10 (expr -> BOOLEAN .)
    $end            reduce using rule 10 (expr -> BOOLEAN .)
    }               reduce using rule 10 (expr -> BOOLEAN .)
    )               reduce using rule 10 (expr -> BOOLEAN .)


state 17

    (13) expr -> NUMBER .
    NOTEQUALS       reduce using rule 13 (expr -> NUMBER .)
    EQUALS          reduce using rule 13 (expr -> NUMBER .)
    GREATER         reduce using rule 13 (expr -> NUMBER .)
    LESS            reduce using rule 13 (expr -> NUMBER .)
    /               reduce using rule 13 (expr -> NUMBER .)
    *               reduce using rule 13 (expr -> NUMBER .)
    -               reduce using rule 13 (expr -> NUMBER .)
    +               reduce using rule 13 (expr -> NUMBER .)
    ;               reduce using rule 13 (expr -> NUMBER .)
    $end            reduce using rule 13 (expr -> NUMBER .)
    }               reduce using rule 13 (expr -> NUMBER .)
    )               reduce using rule 13 (expr -> NUMBER .)


state 18

    (6) statement -> WHILE ( expr . ) { statements }
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! shift/reduce conflict for ) resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    )               shift and go to state 29
    NOTEQUALS       shift and go to state 21
    EQUALS          shift and go to state 22
    GREATER         shift and go to state 23
    LESS            shift and go to state 24
    /               shift and go to state 25
    *               shift and go to state 26
    -               shift and go to state 27
    +               shift and go to state 28


state 19

    (7) statement -> IF ( expr . ) { statements }
    (8) statement -> IF ( expr . ) { statements } ELSE { statements }
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! shift/reduce conflict for ) resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    )               shift and go to state 30
    NOTEQUALS       shift and go to state 21
    EQUALS          shift and go to state 22
    GREATER         shift and go to state 23
    LESS            shift and go to state 24
    /               shift and go to state 25
    *               shift and go to state 26
    -               shift and go to state 27
    +               shift and go to state 28


state 20

    (9) statement -> PRINT ( expr . )
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! shift/reduce conflict for ) resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    )               shift and go to state 31
    NOTEQUALS       shift and go to state 21
    EQUALS          shift and go to state 22
    GREATER         shift and go to state 23
    LESS            shift and go to state 24
    /               shift and go to state 25
    *               shift and go to state 26
    -               shift and go to state 27
    +               shift and go to state 28


state 21

    (14) expr -> expr NOTEQUALS . expr
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 32

state 22

    (15) expr -> expr EQUALS . expr
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 33

state 23

    (16) expr -> expr GREATER . expr
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 34

state 24

    (17) expr -> expr LESS . expr
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 35

state 25

    (18) expr -> expr / . expr
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 36

state 26

    (19) expr -> expr * . expr
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 37

state 27

    (20) expr -> expr - . expr
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 38

state 28

    (21) expr -> expr + . expr
    (10) expr -> . BOOLEAN
    (11) expr -> . NAME
    (12) expr -> . expr
    (13) expr -> . NUMBER
    (14) expr -> . expr NOTEQUALS expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr GREATER expr
    (17) expr -> . expr LESS expr
    (18) expr -> . expr / expr
    (19) expr -> . expr * expr
    (20) expr -> . expr - expr
    (21) expr -> . expr + expr
    BOOLEAN         shift and go to state 16
    NAME            shift and go to state 14
    NUMBER          shift and go to state 17

    expr                           shift and go to state 39

state 29

    (6) statement -> WHILE ( expr ) . { statements }
    {               shift and go to state 40


state 30

    (7) statement -> IF ( expr ) . { statements }
    (8) statement -> IF ( expr ) . { statements } ELSE { statements }
    {               shift and go to state 41


state 31

    (9) statement -> PRINT ( expr ) .
    ;               reduce using rule 9 (statement -> PRINT ( expr ) .)
    $end            reduce using rule 9 (statement -> PRINT ( expr ) .)
    }               reduce using rule 9 (statement -> PRINT ( expr ) .)


state 32

    (14) expr -> expr NOTEQUALS expr .
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for EQUALS resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for GREATER resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for LESS resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for / resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for * resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for - resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for + resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for ; resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for $end resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for } resolved using rule 14 (expr -> expr NOTEQUALS expr .)
  ! reduce/reduce conflict for ) resolved using rule 14 (expr -> expr NOTEQUALS expr .)
    NOTEQUALS       reduce using rule 14 (expr -> expr NOTEQUALS expr .)
    EQUALS          reduce using rule 14 (expr -> expr NOTEQUALS expr .)
    GREATER         reduce using rule 14 (expr -> expr NOTEQUALS expr .)
    LESS            reduce using rule 14 (expr -> expr NOTEQUALS expr .)
    ;               reduce using rule 14 (expr -> expr NOTEQUALS expr .)
    $end            reduce using rule 14 (expr -> expr NOTEQUALS expr .)
    }               reduce using rule 14 (expr -> expr NOTEQUALS expr .)
    )               reduce using rule 14 (expr -> expr NOTEQUALS expr .)
    /               shift and go to state 25
    *               shift and go to state 26
    -               shift and go to state 27
    +               shift and go to state 28


state 33

    (15) expr -> expr EQUALS expr .
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for EQUALS resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for GREATER resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for LESS resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for / resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for * resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for - resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for + resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for ; resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for $end resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for } resolved using rule 15 (expr -> expr EQUALS expr .)
  ! reduce/reduce conflict for ) resolved using rule 15 (expr -> expr EQUALS expr .)
    NOTEQUALS       reduce using rule 15 (expr -> expr EQUALS expr .)
    EQUALS          reduce using rule 15 (expr -> expr EQUALS expr .)
    GREATER         reduce using rule 15 (expr -> expr EQUALS expr .)
    LESS            reduce using rule 15 (expr -> expr EQUALS expr .)
    ;               reduce using rule 15 (expr -> expr EQUALS expr .)
    $end            reduce using rule 15 (expr -> expr EQUALS expr .)
    }               reduce using rule 15 (expr -> expr EQUALS expr .)
    )               reduce using rule 15 (expr -> expr EQUALS expr .)
    /               shift and go to state 25
    *               shift and go to state 26
    -               shift and go to state 27
    +               shift and go to state 28


state 34

    (16) expr -> expr GREATER expr .
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for EQUALS resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for GREATER resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for LESS resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for / resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for * resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for - resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for + resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for ; resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for $end resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for } resolved using rule 16 (expr -> expr GREATER expr .)
  ! reduce/reduce conflict for ) resolved using rule 16 (expr -> expr GREATER expr .)
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 16 (expr -> expr GREATER expr .)
    $end            reduce using rule 16 (expr -> expr GREATER expr .)
    }               reduce using rule 16 (expr -> expr GREATER expr .)
    )               reduce using rule 16 (expr -> expr GREATER expr .)
    NOTEQUALS       shift and go to state 21
    EQUALS          shift and go to state 22
    GREATER         shift and go to state 23
    LESS            shift and go to state 24
    /               shift and go to state 25
    *               shift and go to state 26
    -               shift and go to state 27
    +               shift and go to state 28


state 35

    (17) expr -> expr LESS expr .
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for EQUALS resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for GREATER resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for LESS resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for / resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for * resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for - resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for + resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for ; resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for $end resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for } resolved using rule 17 (expr -> expr LESS expr .)
  ! reduce/reduce conflict for ) resolved using rule 17 (expr -> expr LESS expr .)
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 17 (expr -> expr LESS expr .)
    $end            reduce using rule 17 (expr -> expr LESS expr .)
    }               reduce using rule 17 (expr -> expr LESS expr .)
    )               reduce using rule 17 (expr -> expr LESS expr .)
    NOTEQUALS       shift and go to state 21
    EQUALS          shift and go to state 22
    GREATER         shift and go to state 23
    LESS            shift and go to state 24
    /               shift and go to state 25
    *               shift and go to state 26
    -               shift and go to state 27
    +               shift and go to state 28


state 36

    (18) expr -> expr / expr .
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for EQUALS resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for GREATER resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for LESS resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for / resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for * resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for - resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for + resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for ; resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for $end resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for } resolved using rule 18 (expr -> expr / expr .)
  ! reduce/reduce conflict for ) resolved using rule 18 (expr -> expr / expr .)
    NOTEQUALS       reduce using rule 18 (expr -> expr / expr .)
    EQUALS          reduce using rule 18 (expr -> expr / expr .)
    GREATER         reduce using rule 18 (expr -> expr / expr .)
    LESS            reduce using rule 18 (expr -> expr / expr .)
    /               reduce using rule 18 (expr -> expr / expr .)
    *               reduce using rule 18 (expr -> expr / expr .)
    -               reduce using rule 18 (expr -> expr / expr .)
    +               reduce using rule 18 (expr -> expr / expr .)
    ;               reduce using rule 18 (expr -> expr / expr .)
    $end            reduce using rule 18 (expr -> expr / expr .)
    }               reduce using rule 18 (expr -> expr / expr .)
    )               reduce using rule 18 (expr -> expr / expr .)


state 37

    (19) expr -> expr * expr .
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for EQUALS resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for GREATER resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for LESS resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for / resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for * resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for - resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for + resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for ; resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for $end resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for } resolved using rule 19 (expr -> expr * expr .)
  ! reduce/reduce conflict for ) resolved using rule 19 (expr -> expr * expr .)
    NOTEQUALS       reduce using rule 19 (expr -> expr * expr .)
    EQUALS          reduce using rule 19 (expr -> expr * expr .)
    GREATER         reduce using rule 19 (expr -> expr * expr .)
    LESS            reduce using rule 19 (expr -> expr * expr .)
    /               reduce using rule 19 (expr -> expr * expr .)
    *               reduce using rule 19 (expr -> expr * expr .)
    -               reduce using rule 19 (expr -> expr * expr .)
    +               reduce using rule 19 (expr -> expr * expr .)
    ;               reduce using rule 19 (expr -> expr * expr .)
    $end            reduce using rule 19 (expr -> expr * expr .)
    }               reduce using rule 19 (expr -> expr * expr .)
    )               reduce using rule 19 (expr -> expr * expr .)


state 38

    (20) expr -> expr - expr .
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for EQUALS resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for GREATER resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for LESS resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for / resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for * resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for - resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for + resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for ; resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for $end resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for } resolved using rule 20 (expr -> expr - expr .)
  ! reduce/reduce conflict for ) resolved using rule 20 (expr -> expr - expr .)
    NOTEQUALS       reduce using rule 20 (expr -> expr - expr .)
    EQUALS          reduce using rule 20 (expr -> expr - expr .)
    GREATER         reduce using rule 20 (expr -> expr - expr .)
    LESS            reduce using rule 20 (expr -> expr - expr .)
    -               reduce using rule 20 (expr -> expr - expr .)
    +               reduce using rule 20 (expr -> expr - expr .)
    ;               reduce using rule 20 (expr -> expr - expr .)
    $end            reduce using rule 20 (expr -> expr - expr .)
    }               reduce using rule 20 (expr -> expr - expr .)
    )               reduce using rule 20 (expr -> expr - expr .)
    /               shift and go to state 25
    *               shift and go to state 26


state 39

    (21) expr -> expr + expr .
    (12) expr -> expr .
    (14) expr -> expr . NOTEQUALS expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . GREATER expr
    (17) expr -> expr . LESS expr
    (18) expr -> expr . / expr
    (19) expr -> expr . * expr
    (20) expr -> expr . - expr
    (21) expr -> expr . + expr
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for EQUALS resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for GREATER resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for LESS resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for / resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for * resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for - resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for + resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for ; resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for $end resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for } resolved using rule 21 (expr -> expr + expr .)
  ! reduce/reduce conflict for ) resolved using rule 21 (expr -> expr + expr .)
    NOTEQUALS       reduce using rule 21 (expr -> expr + expr .)
    EQUALS          reduce using rule 21 (expr -> expr + expr .)
    GREATER         reduce using rule 21 (expr -> expr + expr .)
    LESS            reduce using rule 21 (expr -> expr + expr .)
    -               reduce using rule 21 (expr -> expr + expr .)
    +               reduce using rule 21 (expr -> expr + expr .)
    ;               reduce using rule 21 (expr -> expr + expr .)
    $end            reduce using rule 21 (expr -> expr + expr .)
    }               reduce using rule 21 (expr -> expr + expr .)
    )               reduce using rule 21 (expr -> expr + expr .)
    /               shift and go to state 25
    *               shift and go to state 26


state 40

    (6) statement -> WHILE ( expr ) { . statements }
    (2) statements -> . statement
    (3) statements -> . statement ;
    (4) statements -> . statement ; statements
    (5) statement -> . NAME = expr
    (6) statement -> . WHILE ( expr ) { statements }
    (7) statement -> . IF ( expr ) { statements }
    (8) statement -> . IF ( expr ) { statements } ELSE { statements }
    (9) statement -> . PRINT ( expr )
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    PRINT           shift and go to state 7

    statements                     shift and go to state 42
    statement                      shift and go to state 3

state 41

    (7) statement -> IF ( expr ) { . statements }
    (8) statement -> IF ( expr ) { . statements } ELSE { statements }
    (2) statements -> . statement
    (3) statements -> . statement ;
    (4) statements -> . statement ; statements
    (5) statement -> . NAME = expr
    (6) statement -> . WHILE ( expr ) { statements }
    (7) statement -> . IF ( expr ) { statements }
    (8) statement -> . IF ( expr ) { statements } ELSE { statements }
    (9) statement -> . PRINT ( expr )
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    PRINT           shift and go to state 7

    statements                     shift and go to state 43
    statement                      shift and go to state 3

state 42

    (6) statement -> WHILE ( expr ) { statements . }
    }               shift and go to state 44


state 43

    (7) statement -> IF ( expr ) { statements . }
    (8) statement -> IF ( expr ) { statements . } ELSE { statements }
    }               shift and go to state 45


state 44

    (6) statement -> WHILE ( expr ) { statements } .
    ;               reduce using rule 6 (statement -> WHILE ( expr ) { statements } .)
    $end            reduce using rule 6 (statement -> WHILE ( expr ) { statements } .)
    }               reduce using rule 6 (statement -> WHILE ( expr ) { statements } .)


state 45

    (7) statement -> IF ( expr ) { statements } .
    (8) statement -> IF ( expr ) { statements } . ELSE { statements }
    ;               reduce using rule 7 (statement -> IF ( expr ) { statements } .)
    $end            reduce using rule 7 (statement -> IF ( expr ) { statements } .)
    }               reduce using rule 7 (statement -> IF ( expr ) { statements } .)
    ELSE            shift and go to state 46


state 46

    (8) statement -> IF ( expr ) { statements } ELSE . { statements }
    {               shift and go to state 47


state 47

    (8) statement -> IF ( expr ) { statements } ELSE { . statements }
    (2) statements -> . statement
    (3) statements -> . statement ;
    (4) statements -> . statement ; statements
    (5) statement -> . NAME = expr
    (6) statement -> . WHILE ( expr ) { statements }
    (7) statement -> . IF ( expr ) { statements }
    (8) statement -> . IF ( expr ) { statements } ELSE { statements }
    (9) statement -> . PRINT ( expr )
    NAME            shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    PRINT           shift and go to state 7

    statements                     shift and go to state 48
    statement                      shift and go to state 3

state 48

    (8) statement -> IF ( expr ) { statements } ELSE { statements . }
    }               shift and go to state 49


state 49

    (8) statement -> IF ( expr ) { statements } ELSE { statements } .
    ;               reduce using rule 8 (statement -> IF ( expr ) { statements } ELSE { statements } .)
    $end            reduce using rule 8 (statement -> IF ( expr ) { statements } ELSE { statements } .)
    }               reduce using rule 8 (statement -> IF ( expr ) { statements } ELSE { statements } .)


Conflicts:

shift/reduce conflict for NOTEQUALS in state 15 resolved as shift
shift/reduce conflict for EQUALS in state 15 resolved as shift
shift/reduce conflict for GREATER in state 15 resolved as shift
shift/reduce conflict for LESS in state 15 resolved as shift
shift/reduce conflict for / in state 15 resolved as shift
shift/reduce conflict for * in state 15 resolved as shift
shift/reduce conflict for - in state 15 resolved as shift
shift/reduce conflict for + in state 15 resolved as shift
shift/reduce conflict for ) in state 18 resolved as shift
shift/reduce conflict for NOTEQUALS in state 18 resolved as shift
shift/reduce conflict for EQUALS in state 18 resolved as shift
shift/reduce conflict for GREATER in state 18 resolved as shift
shift/reduce conflict for LESS in state 18 resolved as shift
shift/reduce conflict for / in state 18 resolved as shift
shift/reduce conflict for * in state 18 resolved as shift
shift/reduce conflict for - in state 18 resolved as shift
shift/reduce conflict for + in state 18 resolved as shift
shift/reduce conflict for ) in state 19 resolved as shift
shift/reduce conflict for NOTEQUALS in state 19 resolved as shift
shift/reduce conflict for EQUALS in state 19 resolved as shift
shift/reduce conflict for GREATER in state 19 resolved as shift
shift/reduce conflict for LESS in state 19 resolved as shift
shift/reduce conflict for / in state 19 resolved as shift
shift/reduce conflict for * in state 19 resolved as shift
shift/reduce conflict for - in state 19 resolved as shift
shift/reduce conflict for + in state 19 resolved as shift
shift/reduce conflict for ) in state 20 resolved as shift
shift/reduce conflict for NOTEQUALS in state 20 resolved as shift
shift/reduce conflict for EQUALS in state 20 resolved as shift
shift/reduce conflict for GREATER in state 20 resolved as shift
shift/reduce conflict for LESS in state 20 resolved as shift
shift/reduce conflict for / in state 20 resolved as shift
shift/reduce conflict for * in state 20 resolved as shift
shift/reduce conflict for - in state 20 resolved as shift
shift/reduce conflict for + in state 20 resolved as shift
shift/reduce conflict for NOTEQUALS in state 34 resolved as shift
shift/reduce conflict for EQUALS in state 34 resolved as shift
shift/reduce conflict for GREATER in state 34 resolved as shift
shift/reduce conflict for LESS in state 34 resolved as shift
shift/reduce conflict for / in state 34 resolved as shift
shift/reduce conflict for * in state 34 resolved as shift
shift/reduce conflict for - in state 34 resolved as shift
shift/reduce conflict for + in state 34 resolved as shift
shift/reduce conflict for NOTEQUALS in state 35 resolved as shift
shift/reduce conflict for EQUALS in state 35 resolved as shift
shift/reduce conflict for GREATER in state 35 resolved as shift
shift/reduce conflict for LESS in state 35 resolved as shift
shift/reduce conflict for / in state 35 resolved as shift
shift/reduce conflict for * in state 35 resolved as shift
shift/reduce conflict for - in state 35 resolved as shift
shift/reduce conflict for + in state 35 resolved as shift
reduce/reduce conflict in state 15 resolved using rule statement -> NAME = expr
rejected rule (expr -> expr) in state 15
reduce/reduce conflict in state 32 resolved using rule expr -> expr NOTEQUALS expr  [precedence=left, level=1]
rejected rule (expr -> expr) in state 32
reduce/reduce conflict in state 33 resolved using rule expr -> expr EQUALS expr  [precedence=left, level=1]
rejected rule (expr -> expr) in state 33
reduce/reduce conflict in state 34 resolved using rule expr -> expr GREATER expr
rejected rule (expr -> expr) in state 34
reduce/reduce conflict in state 35 resolved using rule expr -> expr LESS expr
rejected rule (expr -> expr) in state 35
reduce/reduce conflict in state 36 resolved using rule expr -> expr / expr  [precedence=left, level=3]
rejected rule (expr -> expr) in state 36
reduce/reduce conflict in state 37 resolved using rule expr -> expr * expr  [precedence=left, level=3]
rejected rule (expr -> expr) in state 37
reduce/reduce conflict in state 38 resolved using rule expr -> expr - expr  [precedence=left, level=2]
rejected rule (expr -> expr) in state 38
reduce/reduce conflict in state 39 resolved using rule expr -> expr + expr  [precedence=left, level=2]
rejected rule (expr -> expr) in state 39
Rule (expr -> expr) is never reduced